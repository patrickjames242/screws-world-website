

@import 'helpers';
@import 'products-variables';



.Products{

    --main-content-padding: 3rem;

    margin: auto;
    max-width: 1850px;
    display: grid;

    @media(min-width: $min-width-for-displaying-side-bar){
        margin-bottom: 5rem;
    }
    
    > .side-bar-button{

        $side-bar-button-insets: 2.5rem;

        background-color: colors(dark-light-blue);
        @include setProps(height width, 2rem);
        z-index: 1;
        padding: 0.7rem 1.4rem;
        border-radius: 1rem;
        position: sticky;
        bottom: $side-bar-button-insets;
        justify-self: end;
        box-shadow:0px 0px 1.5rem 0.5rem rgba(colors(dark-blue), 0.4);

        @include setProps(margin-top margin-bottom margin-right, $side-bar-button-insets);

        @include bounceOnHover(1.2);
        
        > svg{
            fill: white;
        }


        @media(min-width: $min-width-for-displaying-side-bar){
            display: none;
        }
    }
}

.Products > .content{
    

    margin-top: $page-content-inset-from-nav-bar;
    display: grid;
    grid-auto-flow: column;
    grid-template-columns: auto;

    align-items: start;
    @include setProps(padding-left padding-right, $nav-bar-insets);

    
    @media(min-width: $min-width-for-displaying-side-bar){
        grid-template-columns: auto 1fr;
    }

    .SideBar{
        .SideBarLink{
            
            @mixin configureForHoverTransition($properties){
                transition-property: $properties;
                transition-duration: 0.2s;
            }

            cursor: pointer;
            display: grid;
            grid-auto-flow: column;
            justify-content: space-between;
            gap: 1rem;
            align-content: center;
            align-items: center;
            border-radius: 0.5rem;

            $padding-centering-adjustment-factor: 0.96px;
            padding: $side-bar-link-top-and-bottom-padding + $padding-centering-adjustment-factor 16px $side-bar-link-top-and-bottom-padding - $padding-centering-adjustment-factor;

            @include configureForHoverTransition(background-color);
            
            &.selected{
                // background-color: colors(light-blue);
                background-color: colors(dark-light-blue);
            }
            
            @media(hover: hover){
                &:not(.selected):hover{
                    background-color: rgba(colors(light-blue), 0.2);
                    > *{
                        color: colors(light-blue);
                    }
                }
            }
            
            > *{
                @include configureForHoverTransition(color);
            }

            // must be set because the computed height of each nav bar link in the code relies on the font  inside the link to be exactly what they are in this code.
            line-height: 1;
            
            > .title{
                font-size: $side-bar-link-title-font-size;
                word-break: break-all;
                @include setMaximumLines(1);
            }
            
            > .chevron{
                font-size: $side-bar-link-chevron-font-size;
                font-weight: bold;
            }
        }
        
        .SideBarLinksNode{
            overflow: hidden;

            > .children-holder{
                margin-top: $side-bar-link-spacing;
                margin-left: 1.5rem;
                display: grid;
                gap: $side-bar-link-spacing;
            }
        }
    }
    

    
    
    .AttachedSideBar{
        
        box-sizing: border-box;
        height: calc(100vh - #{$page-content-inset-from-screen-top + $main-content-border-radius});
        width: 18.75rem;
        position: sticky;
        top: $page-content-inset-from-screen-top + $main-content-border-radius;
        
        @include setProps(margin-top margin-bottom, $main-content-border-radius);
        display: none;
        @media (min-width: $min-width-for-displaying-side-bar){
            display: initial;
        }
        
        // ------ to achieve equal spacing between the right and left side of the vertical scroll bar
        margin-right: $nav-bar-insets / 2;
        > .content-holder > .content{
            padding-right: $nav-bar-insets/2;
        }
        // ^^^^^^^^^^^^^
        
        
        > .content-holder{
            @include setProps(width height, 100%);
            overflow-y: scroll;
            
            > .content{
                display: grid;
                gap: $side-bar-link-spacing;
                padding-bottom: $side-bar-link-spacing;
            }
        }
        
        > .top-fader, > .bottom-fader{
            position: absolute;
            @include setProps(left right, 0);
            height: 5em;
            pointer-events: none;
            opacity: 0;
            transition-property: opacity;
            transition-duration: 0.25s;
        }
        
        > .top-fader{
            top: 0;
            background: linear-gradient(180deg, colors(dark-blue) 0%, rgba(colors(dark-blue), 0) 100%);
        }
        
        > .bottom-fader{        
            bottom: 0;
            background: linear-gradient(180deg, rgba(colors(dark-blue), 0) 0%, colors(dark-blue) 100%);
            height: 8em;
        }
    }
    
    
    
    
    .DetatchedSideBar {

        $dismiss-button-left-inset: 0.7rem;
        $dismiss-button-size: 3.85rem;
        $detatched-side-bar-insets: $nav-bar-insets;

        position: fixed;
        @include setProps(left top bottom, $detatched-side-bar-insets);
        z-index: 100;

        pointer-events: none;
    
        > .content{
            --max-detatched-side-bar-width: 330px;
            display: grid;
            grid-template-columns: minmax(0rem, var(--max-detatched-side-bar-width)) auto;
            gap: $dismiss-button-left-inset;
            max-width: calc(100vw - #{$detatched-side-bar-insets * 2});
            height: 100%;

            @include respondToNarrowWidth{
                --max-detatched-side-bar-width: 280px;
            }

            
            .links-container-holder{
                pointer-events: auto;

                background-color: colors(light-gray-bg);
                overflow-y: scroll;
                border-radius: $nav-bar-border-radius;
                
                position: relative;
                
                > .links-container{
                    display: grid;
                    gap: $side-bar-link-spacing;
                    padding: 1rem;
                }    
            }
            
            
            
            .dismiss-button{
                @include bounceOnHover(1.15);
                pointer-events: auto;
                
                background-color: colors(dark-light-blue);
                @include setProps(width height, $dismiss-button-size);
                border-radius: 1rem;
                @include centerContentInGrid;

                > svg{
                    @include setProps(width height, 1.6rem);
                    fill: white;
                }
            }


        }

    }
    
    
    
    .MainContent{
        
        background-color: rgb(27, 42, 56);
        
        border-radius: $main-content-border-radius;
        padding: var(--main-content-padding);
        
        @media(max-width: 400px){
           
            --main-content-padding: 2rem;
        }

        > .TitleBox{

            display: grid;
            gap: 2rem;
            > .text-box{
                display: grid;
                gap: 1rem;
                justify-items: start;

                > .title{
                    font-size: 3rem;
                    font-weight: bold;
                }

                > .description{
                    color: colors(grayish-blue-text);
                    font-size: 1.3rem;
                    line-height: 1.3;
                    max-width: 45rem;
                }
            }

            > .bottom-line{
                $height: 0.5rem;
                height: $height;
                border-radius: $height / 2;
                background: blueThemeGradient(horizontal);
            }
        }


        > .ProductItemsGrid{

            margin-left: -$product-grid-insets;
            margin-top: $product-grid-insets;
            display: grid;
            gap: $product-grid-insets;
            grid-template-columns: auto;
            justify-content: center;
            justify-items: center;

            @media(min-width: 550px){
                grid-template-columns: auto auto;
            }

            @media(min-width: 850px){
                grid-template-columns: auto auto  auto ;
            }

            @media(min-width: $min-width-for-displaying-side-bar){
                grid-template-columns: auto auto;
            }

            @media(min-width: 1250px){
                grid-template-columns: auto auto auto;
            }

            @media(min-width: 1600px){
                grid-template-columns: auto auto auto auto;
            }

            > .ProductOrCategoryItem{
            
                @mixin configureTransition($properties){
                    transition-property: $properties;
                    transition-duration: 0.2s;
                }

                max-width: 315px;

                padding: $product-grid-insets;
                position: relative;
                > .background-view{
                    position: absolute;
                    background-color: rgb(40, 56, 71);
                    box-shadow:0px 0px 3.3rem 1rem rgba(colors(dark-blue), 0.9);
                    border-radius: 0.8rem;
                    left: $product-grid-insets * 2;
                    bottom: 0;
                    right: 0;
                    top: $product-grid-insets * 2;
                    @include configureTransition(top left);
                }
                
                @media(hover: hover){
                    &:hover{
                        z-index: 1; 
                        > .background-view{
                            top: 0; left: 0; bottom: -$product-grid-insets;
                        }

                        > .content-box{
                            > .under-image-content{
                                transform: translateX(-$product-grid-insets);
                                > .text-box > .title{
                                    @include applyBlueThemeTextGradient;
                                }
                            }
                            > .image-box > .content > .image-holder > img {
                                transform: scale(1.1);
                            }
                        }
                    }
                }

                > .content-box{

                    position: relative;
                    
                    > .image-box{

                        padding-top: 56%;
                        background-color: colors(grayish-blue-text);
                        border-radius: 0.4rem;
                        position: relative;
                        > .content{
                            
                            position: absolute;
                            @include setProps(top bottom left right, 0);
                            
                            .image-holder{
                                
                                position: absolute;
                                top: 50%;
                                left: 50%;
                                transform: translate(-50%, -50%);
                                
                                height: 60%;
                                width: 60%;

                                > img{
                                    position: absolute;
                                    top: 0; left: 0;
                                    width: 100%; height: 100%;
                                    object-fit: contain;
                                    @include configureTransition(transform);
                                }
                            }
                            
                            
                            
                            > .product-or-category{
                                position: absolute;
                                @include setProps(right top, 0.5rem);
                                text-transform: uppercase;
                                justify-self: start;
                                font-weight: bold;
                                font-size: 11.2px;
                                padding: 0.265rem 0.4rem 0.2rem;
                                border-radius: 0.3rem;
                                background-color: colors(light-blue);
                            }

                        }
                        
                    }

                    > .under-image-content{
                        margin-left: $product-grid-insets * 2;
                        margin-top: $product-grid-insets;
                        @include configureTransition(transform);

                        > .text-box{
                            display: grid;
                            gap: 0.5rem;
                            justify-items: start;
                            
                            > .title{
                                font-weight: bold;
                                font-size: 16px;
                                @include setMaximumLines(2);
                            }

                            > .description{
                                font-size: 14px;
                                color: colors(grayish-blue-text);
                                @include setMaximumLines(3);
                            }
                        }
                    }
                }
            }
        }
    }
}


